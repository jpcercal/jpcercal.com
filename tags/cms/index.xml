<?xml version="1.0" encoding="utf-8" standalone="yes" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cms on jpcercal.com</title><link>https://jpcercal.com/tags/cms/</link><description>Recent content in Cms on jpcercal.com</description><generator>Hugo -- gohugo.io</generator><language>pt</language><lastBuildDate>Tue, 12 Mar 2019 21:33:54 +0000</lastBuildDate><atom:link href="https://jpcercal.com/tags/cms/index.xml" rel="self" type="application/rss+xml" /><item><title>Revisitando o layout e o projeto do Blog</title><link>https://jpcercal.com/revisitando-o-layout-e-o-projeto-do-blog/</link><pubDate>Tue, 12 Mar 2019 21:33:54 +0000</pubDate><guid>https://jpcercal.com/revisitando-o-layout-e-o-projeto-do-blog/</guid><description>Olá caros leitores, tinha vontade de revisitar o layout do blog há muito tempo, no entanto, dar atenção para a família e escrever não são coisas que podem ser feitas ao mesmo tempo, pois, ambas requerem atenção.
Pois bem, tecnicamente falando eu gostaria de ter o blog com o código fonte aberto no GitHub para servir de inspiração para outros nerds tomarem meu projeto como base.
 Ficou curioso e quer dar uma olhadinha no código fonte?</description></item><item><title>WordPress Dica: Como usar Shortcodes</title><link>https://jpcercal.com/como-usar-shortcodes/</link><pubDate>Tue, 22 Oct 2013 12:05:38 +0000</pubDate><guid>https://jpcercal.com/como-usar-shortcodes/</guid><description>O WordPress desde a versão 2.5+ possuí um recurso conhecido como shortcodes, ele funciona de forma similar aos filtros (filters), pois, aceitam parâmetros (atributos) e retornam um resultado.
Bem, os shortcodes são extremamente úteis e fáceis de usar, sendo que, eles permitem que desenvolvedores criem conteúdos personalizados para os usuários adicionarem em suas páginas.
Nós iremos ver a seguir, como é simples adicionar um shortcode no seu tema. Sendo assim, iremos conhecer a função do_shortcode().</description></item><item><title>WordPress Dica: Como verificar se um plugin está ativo?</title><link>https://jpcercal.com/wordpress-dica-como-verificar-se-um-plugin-esta-ativo/</link><pubDate>Wed, 28 Aug 2013 17:40:54 +0000</pubDate><guid>https://jpcercal.com/wordpress-dica-como-verificar-se-um-plugin-esta-ativo/</guid><description>Quando você estiver desenvolvendo um tema ou um plugin para a plataforma WordPress, pode ser necessário verificar se um plugin específico está ativado. Pois bem, apresento aqui um simples script para verificar se um plugin está ou não ativado no painel de administração do wordpress.
Você precisará modificar apenas a linha 4, pelo nome do diretório do seu plugin.
Nota: Os plugins ficam localizados no diretório: /wp-content/plugins/
1 2 3 4 5 6 7 8 9 10 11 12&amp;lt;?</description></item><item><title>Como e Porque você deve incluir o jQuery do Google CDN no WP</title><link>https://jpcercal.com/como-e-porque-voce-deve-incluir-o-jquery-do-google-cdn-no-wordpress/</link><pubDate>Mon, 26 Aug 2013 17:30:19 +0000</pubDate><guid>https://jpcercal.com/como-e-porque-voce-deve-incluir-o-jquery-do-google-cdn-no-wordpress/</guid><description>O jQuery é uma biblioteca amplamente utilizada para o desenvolvimento web, sendo que, no WordPress temos essa biblioteca incluída no pacote de instalação default.
Neste artigo, irei apresentar como e porque você deveria substituir o jQuery default do WordPress pelo jQuery do Google CDN (Content Distribution Network).
Mas porque você deveria substitui-lo?
De um modo geral, você deve fazer isto para que o carregamento do script seja mais rápido para o usuário final.</description></item><item><title>WordPress Hack: Como obter o conteúdo de um Post pelo ID</title><link>https://jpcercal.com/wordpress-hack-como-obter-o-conteudo-de-um-post-pelo-id/</link><pubDate>Fri, 23 Aug 2013 14:52:26 +0000</pubDate><guid>https://jpcercal.com/wordpress-hack-como-obter-o-conteudo-de-um-post-pelo-id/</guid><description>Quanto você está construindo um tema para o WordPress, poderá ser necessário obter o conteúdo de um post específico tendo como filtro o ID. Na maioria das vezes você obtém o conteúdo de um post através da função _get_postcontent dentro de um Loop.
Entretanto, quando você precisa recuperar a informação de um post fora do contexto do loop ou em um ponto separado da aplicação, a melhor solução é usar a função get_post_field(&#39;field-name&#39;), $postId).</description></item><item><title>Como pegar um Permalink de uma Página</title><link>https://jpcercal.com/como-pegar-um-permalink-de-uma-pagina/</link><pubDate>Sat, 09 Feb 2013 10:17:18 +0000</pubDate><guid>https://jpcercal.com/como-pegar-um-permalink-de-uma-pagina/</guid><description>Hoje precisamos obter um permalink de uma página no WordPress, cujo _posttype é &amp;ldquo;page&amp;rdquo;. Para isto, tivemos de combinar duas funções, são elas: get_permalink() e get_page_by_path().
Como Pegar um Permalink de uma Página utilizando o Nome da Página:
1 2 3&amp;lt;a href=&amp;quot;&amp;lt;?php echo get_permalink( get_page_by_path(&amp;#39;Eventos&amp;#39;) ); ?&amp;gt;&amp;quot;&amp;gt; &amp;lt;?php _e(&amp;#39;Eventos&amp;#39;, &amp;#39;jpcercal-com&amp;#39;); ?&amp;gt; &amp;lt;/a&amp;gt;   Como Pegar um Permalink de uma Página utilizando o Slug da Página:
1 2 3&amp;lt;a href=&amp;quot;&amp;lt;?php echo get_permalink( get_page_by_path(&amp;#39;cadastrar-cliente&amp;#39;) ); ?</description></item><item><title>Inserindo usuários no WordPress com wp_insert_user</title><link>https://jpcercal.com/inserindo-usuarios-no-wordpress-com-wp_insert_user/</link><pubDate>Thu, 24 Jan 2013 10:16:39 +0000</pubDate><guid>https://jpcercal.com/inserindo-usuarios-no-wordpress-com-wp_insert_user/</guid><description>A função wp_insert_user insere um usuário na base de dados do WordPress. Com ela também é possível atualizar um usuário se a chave ID estiver presente no array passado para a função como parâmetro.
1 2 3 4 5 6 7 8 9 10 11&amp;lt;?php /** * Insere um usuário na base de dados do WordPress * * @param $userdata mixed Um array com os dados do usuário, stdClass ou um objeto WP_User * * @return mixed Se sucesso, retorna o ID do usuário que acaba de ser criado, * do contrário retorna um objeto WP_Error */ wp_insert_user($userdata);   O array $userdata deve conter os seguintes campos:</description></item><item><title>Resumo em páginas do WordPress 3.0&#43;</title><link>https://jpcercal.com/resumo-em-paginas-do-wordpress-3-0/</link><pubDate>Sun, 09 Dec 2012 03:12:27 +0000</pubDate><guid>https://jpcercal.com/resumo-em-paginas-do-wordpress-3-0/</guid><description>Se você já sentiu a necessidade de adicionar resumos para páginas no WordPress 3.0+, pode ficar feliz porque a dica é bem simples. Basta adicionar o seguinte código em um arquivo que seja carregado automaticamente pelo wordpress.
1 2 3 4 5 6&amp;lt;?php /** * @param string $post_type * @param string|array $supports */ add_post_type_support(&amp;#39;search&amp;#39;, &amp;#39;excerpt&amp;#39;);   Geralmente o código acima é colocado em uma action hook &amp;ldquo;init&amp;rdquo;.
Isto irá habilitar um novo campo no painel de administração permitindo que você adicione um resumo para as suas páginas.</description></item><item><title>Campos Customizados no painel do Joomla</title><link>https://jpcercal.com/campos-customizados-no-painel-do-joomla/</link><pubDate>Mon, 10 Oct 2011 17:32:40 +0000</pubDate><guid>https://jpcercal.com/campos-customizados-no-painel-do-joomla/</guid><description>Olá, hoje tive a necessidade de adicionar um campo personalizado no painel de administração do Joomla 1.6 para uso de um componente que estava desenvolvendo, decidi compartilhar aqui em meu blog a &amp;ldquo;receita do bolo&amp;rdquo;.
Este tutorial foi desenvolvido tendo como base a Documentação Oficial do Joomla.
Para criar um tipo de campo customizado para o Joomla 1.6 você deve criar uma classe que extenda de um tipo de campo já definido pelo próprio Joomla (media, text, etc), ou então, a classe base para esta funcionalidade que é &amp;ldquo;JFormField&amp;rdquo;.</description></item></channel></rss>